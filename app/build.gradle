apply plugin: 'com.android.application'

android {
    signingConfigs {
        signDebug {
            keyAlias getSignKeyAlias()
            keyPassword getSignKeyPassword()
            storeFile getSignFile()
            storePassword getSignStorePassword()
        }
    }


    compileSdkVersion 26
    buildToolsVersion '26.0.2'

    defaultConfig {
        applicationId "com.codeplex.sdlpal"
        minSdkVersion 10
        targetSdkVersion 18

        ndk {
            abiFilters "armeabi-v7a"
        }
    }

    sourceSets {
        main {
            jni.srcDirs = []
            jniLibs.srcDirs = ['src/main/libs']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.signDebug
        }
    }

    externalNativeBuild {
        ndkBuild {
            path 'src/main/jni/Android.mk'
        }
    }

    lintOptions {
        abortOnError false
    }
}
//
//def getNdkDir() {
//    Properties properties = new Properties()
//    properties.load(project.rootProject.file('local.properties').newDataInputStream())
//    return properties.getProperty('ndk.dir', null)
//}
//
//task buildLib(type: Exec) {
//    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
//        String ndkPath = getNdkDir() + "\\ndk-build.cmd"
//        commandLine ndkPath, "-C", "src\\main\\jni"
//    } else {
//        String ndkPath = getNdkDir() + "/ndk-build"
//        commandLine ndkPath, "-C", "src/main/jni"
//    }
//}
//
//buildLib.execute()

dependencies {
}